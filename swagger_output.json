{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          },
          {
            "name": "filtro",
            "in": "query",
            "type": "string",
            "description": "Um filtro qualquer."
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado.",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para adicionar um usuário.",
        "requestBody": {
          "description": "Pet object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas" : {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "age": {
            "type": "number",
            "example": 29
          },
          "parents": {
            "type": "object",
            "properties": {
              "father": {
                "type": "string",
                "example": "Simon Doe"
              },
              "mother": {
                "type": "string",
                "example": "Marie Doe"
              }
            }
          },
          "diplomas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "school": {
                  "type": "string",
                  "example": "XYZ University"
                },
                "year": {
                  "type": "number",
                  "example": 2020
                },
                "completed": {
                  "type": "boolean",
                  "example": true
                },
                "internship": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "number",
                      "example": 290
                    },
                    "location": {
                      "type": "string",
                      "example": "XYZ Company"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AddUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "age": {
            "type": "number",
            "example": 29
          },
          "about": {
            "type": "string",
            "example": ""
          },
          "gender" : {
            "type" : "string"
          }
        },
        "if":{
          "properties" : {
            "age" : {
              "enum" : [10]
            }
          }
        },
        "then":{
          "required" : ["gender"]
        },
        "required": [
          "name",
          "age"
        ]
      }
    }
  }
}